{
  "openapi": "3.0.1",
  "info": {
    "title": "ShopsServer",
    "version": "1.0"
  },
  "paths": {
    "/api/Analytics/information-product-in-shop": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Display information about all products in a given shop.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id of shop.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Analytics/shops-with-product": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "For a given product, display a list of stores in which it is available.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id of product.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Analytics/average-price-product-groups": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Output the average cost products groups in shops",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Analytics/top-5-purchases": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Output the top 5 purchases.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Analytics/product-delay": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Display all information about goods exceeding the storage limit date.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Analytics/shop-earned-more": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Display a list of stores in which goods were sold for a month in excess of the specified amount.",
        "parameters": [
          {
            "name": "amount",
            "in": "query",
            "description": "Specified amount.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The number from which the month is counted.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Return list of customer",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Add new customer in list of customers",
        "requestBody": {
          "description": "New customer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customer/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Return customer by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Updates customer information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete customer by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "customer id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ProductGroup": {
      "get": {
        "tags": [
          "ProductGroup"
        ],
        "summary": "Return list of product group",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductGroupGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductGroupGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductGroupGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProductGroup"
        ],
        "summary": "Add new product group in list of product group",
        "requestBody": {
          "description": "New product group",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductGroup/{id}": {
      "get": {
        "tags": [
          "ProductGroup"
        ],
        "summary": "Return product group by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "product group id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductGroup"
        ],
        "summary": "Updates product group information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "product group id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "ProductGroup"
        ],
        "summary": "Delete product group by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "product group id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ProductQuantity": {
      "get": {
        "tags": [
          "ProductQuantity"
        ],
        "summary": "Return list of product quantity",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductQuantityGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductQuantityGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductQuantityGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProductQuantity"
        ],
        "summary": "Add new product in shop",
        "requestBody": {
          "description": "New product in shop",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductQuantityPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductQuantityPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductQuantityPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductQuantity/{id}": {
      "get": {
        "tags": [
          "ProductQuantity"
        ],
        "summary": "Return product in shop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Record product quantity id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductQuantity"
        ],
        "summary": "Updates quantity product in shop information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shop id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New quantity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductQuantityPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductQuantityPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductQuantityPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "ProductQuantity"
        ],
        "summary": "Delete record of product quantity in shop by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "record of product quantity id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Return list of product",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Add new product in list of products",
        "requestBody": {
          "description": "New product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Return product by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Updates product information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete product by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Products/{id}, update-limit-date": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update storage limit date product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New storage limit date",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/PurchaseRecord": {
      "get": {
        "tags": [
          "PurchaseRecord"
        ],
        "summary": "Return list of purchase record",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseRecordGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseRecordGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseRecordGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PurchaseRecord"
        ],
        "summary": "Add new purchase record",
        "requestBody": {
          "description": "New purchase record",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseRecordPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseRecordPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseRecordPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseRecordGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseRecordGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseRecordGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/PurchaseRecord/{id}": {
      "get": {
        "tags": [
          "PurchaseRecord"
        ],
        "summary": "Return purchase record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Purchase record id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseRecordGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseRecordGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseRecordGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PurchaseRecord"
        ],
        "summary": "Updates purchase record information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Purchase record id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New information purchase record",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseRecordPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseRecordPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseRecordPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "PurchaseRecord"
        ],
        "summary": "Delete purchase record by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "purchase record id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Shop": {
      "get": {
        "tags": [
          "Shop"
        ],
        "summary": "Return list of shop",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Shop"
        ],
        "summary": "Add new shop in list of shops",
        "requestBody": {
          "description": "New shop",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shop/{id}": {
      "get": {
        "tags": [
          "Shop"
        ],
        "summary": "Return shop by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shop id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Shop"
        ],
        "summary": "Updates shop information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shop id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Shop"
        ],
        "summary": "Delete shop by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shop id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CustomerGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Customer id",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "Customer first name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Customer last name",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "description": "Customer middle name",
            "nullable": true
          },
          "cardCount": {
            "type": "string",
            "description": "Customer card count",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Class CustomerGetDto is used to make HTTP GET request."
      },
      "CustomerPostDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Customer first name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Customer last name",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "description": "Customer middle name",
            "nullable": true
          },
          "cardCount": {
            "type": "string",
            "description": "Customer card count",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Class CustomerPostDto is used to make HTTP POST request."
      },
      "ProductGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Product id",
            "format": "int32"
          },
          "barcode": {
            "type": "string",
            "description": "Product barcode",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Product name",
            "nullable": true
          },
          "productGroupId": {
            "type": "integer",
            "description": "Product group code",
            "format": "int32"
          },
          "weight": {
            "type": "number",
            "description": "Product weight",
            "format": "double"
          },
          "productType": {
            "type": "string",
            "description": "Product type (piece or bulk)",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "Product price",
            "format": "double"
          },
          "storageLimitDate": {
            "type": "string",
            "description": "Storage limit date",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Class ProductGetDto is used to make HTTP GET request."
      },
      "ProductGroupGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Product group id",
            "format": "int32"
          },
          "groupName": {
            "type": "string",
            "description": "Name product group",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Class ProductGroupGetDto is used to make HTTP GET request."
      },
      "ProductGroupPostDto": {
        "type": "object",
        "properties": {
          "groupName": {
            "type": "string",
            "description": "Name product group",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Class ProductGroupPostDto is used to make HTTP POST request."
      },
      "ProductPostDto": {
        "type": "object",
        "properties": {
          "barcode": {
            "type": "string",
            "description": "Product barcode",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Product name",
            "nullable": true
          },
          "productGroupId": {
            "type": "integer",
            "description": "Product group code",
            "format": "int32"
          },
          "weight": {
            "type": "number",
            "description": "Product weight",
            "format": "double"
          },
          "productType": {
            "type": "string",
            "description": "Product type (piece or bulk)",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "Product price",
            "format": "double"
          },
          "storageLimitDate": {
            "type": "string",
            "description": "Storage limit date",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Class ProductPostDto is used to make HTTP POST request."
      },
      "ProductQuantityGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id is used to store the ID.",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "description": "Product barcode",
            "format": "int32"
          },
          "shopId": {
            "type": "integer",
            "description": "Shop id",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "description": "Product quantity",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Class ProductQuantityGetDto is used to make HTTP GET request."
      },
      "ProductQuantityPostDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product barcode",
            "format": "int32"
          },
          "shopId": {
            "type": "integer",
            "description": "Shop id",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "description": "Product quantity",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Class ProductQuantityPostDto is used to make HTTP POST request."
      },
      "PurchaseRecordGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id is used to store the ID.",
            "format": "int32"
          },
          "shopId": {
            "type": "integer",
            "description": "Were bought",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "description": "Who bought (id)",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "description": "What bought (barcode)",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "description": "What bought (barcode)",
            "format": "double"
          },
          "dateSale": {
            "type": "string",
            "description": "When bought",
            "format": "date-time"
          },
          "sum": {
            "type": "number",
            "description": "Purchase amount",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Class PurchaseRecordGetDto is used to make HTTP GET request."
      },
      "PurchaseRecordPostDto": {
        "type": "object",
        "properties": {
          "shopId": {
            "type": "integer",
            "description": "Were bought",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "description": "Who bought (id)",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "description": "What bought (barcode)",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "description": "What bought (barcode)",
            "format": "double"
          },
          "dateSale": {
            "type": "string",
            "description": "When bought",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Class PurchaseRecordPostDto is used to make HTTP POST request."
      },
      "ShopGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Shop id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Shop name",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Shop address",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Class ShopGetDto is used to make HTTP GET request."
      },
      "ShopPostDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Shop name",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Shop address",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Class ShopPostDto is used to make HTTP POST request."
      }
    }
  }
}